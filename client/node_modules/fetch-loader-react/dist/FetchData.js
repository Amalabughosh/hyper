"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var FetchData = function FetchData(props) {
  var _useState = (0, _react.useState)(true),
      _useState2 = _slicedToArray(_useState, 2),
      loading = _useState2[0],
      setLoading = _useState2[1];

  var _useState3 = (0, _react.useState)(null),
      _useState4 = _slicedToArray(_useState3, 2),
      err = _useState4[0],
      setErr = _useState4[1];

  var _useState5 = (0, _react.useState)([]),
      _useState6 = _slicedToArray(_useState5, 2),
      res = _useState6[0],
      setRes = _useState6[1];

  (0, _react.useEffect)(function () {
    _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee() {
      var resFunc, _res;

      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              resFunc = {
                arrayBuffer: 'arrayBuffer',
                blob: 'blob',
                formData: 'formData',
                json: 'json',
                text: 'text'
              };
              _context.prev = 1;

              if (!(Array.isArray(props.fetch) && props.fetch[0])) {
                _context.next = 14;
                break;
              }

              _context.next = 5;
              return Promise.all(props.fetch);

            case 5:
              _res = _context.sent;

              if (!(props.type && resFunc[props.type])) {
                _context.next = 10;
                break;
              }

              _context.next = 9;
              return Promise.all(_res.map(function (res) {
                return res[resFunc[props.type]]();
              }));

            case 9:
              _res = _context.sent;

            case 10:
              setRes(_res);
              setLoading(false);
              _context.next = 16;
              break;

            case 14:
              if (!(!Array.isArray(props.fetch) || props.fetch.length === 0)) {
                _context.next = 16;
                break;
              }

              throw new Error("FetchData: fetch prop must be an array of json fetched promises");

            case 16:
              _context.next = 22;
              break;

            case 18:
              _context.prev = 18;
              _context.t0 = _context["catch"](1);
              setErr(_context.t0);
              setLoading(false);

            case 22:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[1, 18]]);
    }))();
  }, [props]);
  return _react["default"].createElement(_react["default"].Fragment, null, props.children({
    loading: loading,
    err: err,
    res: res
  }));
};

var _default = FetchData;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9GZXRjaERhdGEuanMiXSwibmFtZXMiOlsiRmV0Y2hEYXRhIiwicHJvcHMiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsImVyciIsInNldEVyciIsInJlcyIsInNldFJlcyIsInJlc0Z1bmMiLCJhcnJheUJ1ZmZlciIsImJsb2IiLCJmb3JtRGF0YSIsImpzb24iLCJ0ZXh0IiwiQXJyYXkiLCJpc0FycmF5IiwiZmV0Y2giLCJQcm9taXNlIiwiYWxsIiwidHlwZSIsIm1hcCIsImxlbmd0aCIsIkVycm9yIiwiY2hpbGRyZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQUNDLEtBQUQsRUFBVztBQUFBLGtCQUNLLHFCQUFTLElBQVQsQ0FETDtBQUFBO0FBQUEsTUFDbEJDLE9BRGtCO0FBQUEsTUFDVEMsVUFEUzs7QUFBQSxtQkFFSCxxQkFBUyxJQUFULENBRkc7QUFBQTtBQUFBLE1BRWxCQyxHQUZrQjtBQUFBLE1BRWJDLE1BRmE7O0FBQUEsbUJBR0gscUJBQVMsRUFBVCxDQUhHO0FBQUE7QUFBQSxNQUdsQkMsR0FIa0I7QUFBQSxNQUdiQyxNQUhhOztBQUt6Qix3QkFBVSxZQUFNO0FBQ1o7QUFBQTtBQUFBLDRCQUFDO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDU0MsY0FBQUEsT0FEVCxHQUNtQjtBQUNaQyxnQkFBQUEsV0FBVyxFQUFFLGFBREQ7QUFFWkMsZ0JBQUFBLElBQUksRUFBRSxNQUZNO0FBR1pDLGdCQUFBQSxRQUFRLEVBQUUsVUFIRTtBQUlaQyxnQkFBQUEsSUFBSSxFQUFFLE1BSk07QUFLWkMsZ0JBQUFBLElBQUksRUFBRTtBQUxNLGVBRG5CO0FBQUE7O0FBQUEsb0JBU1dDLEtBQUssQ0FBQ0MsT0FBTixDQUFjZCxLQUFLLENBQUNlLEtBQXBCLEtBQThCZixLQUFLLENBQUNlLEtBQU4sQ0FBWSxDQUFaLENBVHpDO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEscUJBVTJCQyxPQUFPLENBQUNDLEdBQVIsQ0FBWWpCLEtBQUssQ0FBQ2UsS0FBbEIsQ0FWM0I7O0FBQUE7QUFVZVYsY0FBQUEsSUFWZjs7QUFBQSxvQkFXZUwsS0FBSyxDQUFDa0IsSUFBTixJQUFjWCxPQUFPLENBQUNQLEtBQUssQ0FBQ2tCLElBQVAsQ0FYcEM7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxxQkFZMkJGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWixJQUFHLENBQUNjLEdBQUosQ0FBUSxVQUFBZCxHQUFHO0FBQUEsdUJBQUlBLEdBQUcsQ0FBQ0UsT0FBTyxDQUFDUCxLQUFLLENBQUNrQixJQUFQLENBQVIsQ0FBSCxFQUFKO0FBQUEsZUFBWCxDQUFaLENBWjNCOztBQUFBO0FBWWViLGNBQUFBLElBWmY7O0FBQUE7QUFjV0MsY0FBQUEsTUFBTSxDQUFDRCxJQUFELENBQU47QUFDQUgsY0FBQUEsVUFBVSxDQUFDLEtBQUQsQ0FBVjtBQWZYO0FBQUE7O0FBQUE7QUFBQSxvQkFnQmtCLENBQUNXLEtBQUssQ0FBQ0MsT0FBTixDQUFjZCxLQUFLLENBQUNlLEtBQXBCLENBQUQsSUFBK0JmLEtBQUssQ0FBQ2UsS0FBTixDQUFZSyxNQUFaLEtBQXVCLENBaEJ4RTtBQUFBO0FBQUE7QUFBQTs7QUFBQSxvQkFpQmlCLElBQUlDLEtBQUosQ0FBVSxpRUFBVixDQWpCakI7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQW9CT2pCLGNBQUFBLE1BQU0sYUFBTjtBQUNBRixjQUFBQSxVQUFVLENBQUMsS0FBRCxDQUFWOztBQXJCUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFEO0FBd0JILEdBekJELEVBeUJHLENBQUNGLEtBQUQsQ0F6Qkg7QUEyQkEsU0FDSSxrRUFFUUEsS0FBSyxDQUFDc0IsUUFBTixDQUFlO0FBQUVyQixJQUFBQSxPQUFPLEVBQVBBLE9BQUY7QUFBV0UsSUFBQUEsR0FBRyxFQUFIQSxHQUFYO0FBQWdCRSxJQUFBQSxHQUFHLEVBQUhBO0FBQWhCLEdBQWYsQ0FGUixDQURKO0FBT0gsQ0F2Q0Q7O2VBeUNlTixTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IEZldGNoRGF0YSA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xuICAgIGNvbnN0IFtlcnIsIHNldEVycl0gPSB1c2VTdGF0ZShudWxsKTtcbiAgICBjb25zdCBbcmVzLCBzZXRSZXNdID0gdXNlU3RhdGUoW10pO1xuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgKGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc0Z1bmMgPSB7XG4gICAgICAgICAgICAgICAgYXJyYXlCdWZmZXI6ICdhcnJheUJ1ZmZlcicsXG4gICAgICAgICAgICAgICAgYmxvYjogJ2Jsb2InLFxuICAgICAgICAgICAgICAgIGZvcm1EYXRhOiAnZm9ybURhdGEnLFxuICAgICAgICAgICAgICAgIGpzb246ICdqc29uJyxcbiAgICAgICAgICAgICAgICB0ZXh0OiAndGV4dCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocHJvcHMuZmV0Y2gpICYmIHByb3BzLmZldGNoWzBdKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCByZXMgPSBhd2FpdCBQcm9taXNlLmFsbChwcm9wcy5mZXRjaCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwcm9wcy50eXBlICYmIHJlc0Z1bmNbcHJvcHMudHlwZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcyA9IGF3YWl0IFByb21pc2UuYWxsKHJlcy5tYXAocmVzID0+IHJlc1tyZXNGdW5jW3Byb3BzLnR5cGVdXSgpKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgc2V0UmVzKHJlcyk7XG4gICAgICAgICAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIUFycmF5LmlzQXJyYXkocHJvcHMuZmV0Y2gpIHx8IHByb3BzLmZldGNoLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGZXRjaERhdGE6IGZldGNoIHByb3AgbXVzdCBiZSBhbiBhcnJheSBvZiBqc29uIGZldGNoZWQgcHJvbWlzZXNcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgc2V0RXJyKGVycik7XG4gICAgICAgICAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKCk7XG4gICAgfSwgW3Byb3BzXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHByb3BzLmNoaWxkcmVuKHsgbG9hZGluZywgZXJyLCByZXMgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgPC8+XG4gICAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgRmV0Y2hEYXRhOyJdfQ==