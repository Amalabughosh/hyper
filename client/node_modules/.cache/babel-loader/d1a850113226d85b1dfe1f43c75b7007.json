{"ast":null,"code":"var _jsxFileName = \"/home/amal/Desktop/test6/fabric-samples/chainui/client/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form, Input, Button, InputNumber, Select, Spin, Icon, load, Alert } from 'antd';\nimport Popout from 'react-popout';\nimport NewWindow from 'react-new-window';\nimport FetchLoader from 'fetch-loader-react';\nimport LoadingSpinner from 'react-loader-spinner';\nimport BounceLoader from 'react-spinners/BounceLoader';\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nclass Chain extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channels: \"\",\n      organizations: [],\n      opvalue: \"\",\n      text: \"\",\n      orgwrite: 0,\n      peerwrite: 0,\n      orgState: [],\n      loading: false,\n      data: \"\"\n    };\n\n    this.onChannelsChange = e => {\n      this.setState({\n        channels: e.target.value\n      });\n    };\n\n    this.onTextChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.onAddOrganization = () => {\n      const arr = [...this.state.organizations];\n      arr.push({\n        id: arr.length.toString(),\n        name: 'org' + (arr.length + 1),\n        peers: 0\n      });\n      this.setState({\n        organizations: arr\n      });\n    };\n\n    this.onDropdownSelected = value => {\n      console.log(\"selected \".concat(value));\n      var x = value % 10;\n      var y = value / 10;\n      this.setState({\n        orgwrite: y\n      });\n      this.setState({\n        peerwrite: x\n      });\n      console.log(\"x \".concat(x));\n      console.log(\"y \".concat(y)); //here you will see the current selected value of the select input\n    };\n\n    this.onChangeorganizationName = (e, o) => {\n      const arr = [...this.state.organizations];\n      console.log('name: ' + e.target.value);\n      console.log('id: ' + o.id); // +id\n\n      arr[o.id] = {\n        id: o.id,\n        name: e.target.value,\n        peers: o.peers\n      };\n      this.setState({\n        organizations: arr\n      }); // TODO: change the current array (organizations) with the new name\n    };\n\n    this.addPeers = (e, o) => {\n      const arr = [...this.state.organizations];\n      arr[o.id] = {\n        id: o.id,\n        name: o.name,\n        peers: e\n      };\n      this.setState({\n        organizations: arr\n      });\n    };\n\n    this.addorgwrite = value => {\n      this.setState({\n        orgwrite: value\n      });\n      console.log('changed', value);\n    };\n\n    this.addpeerwrite = value => {\n      this.setState({\n        peerwrite: value\n      });\n      console.log('changed', value);\n    };\n\n    this.gotoaskserver = async () => {\n      await fetch('http://localhost:8080/api/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          organizations: this.state.organizations,\n          channels: this.state.channels\n        })\n      }).then(function (data) {\n        console.log('Request success: ', data);\n      }).catch(function (error) {\n        console.log('Request failure: ', error);\n      });\n    };\n\n    this.gotobuild = () => {\n      this.setState({\n        loading: true\n      }, () => {\n        fetch('http://localhost:8080/api/build', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            organizations: this.state.organizations,\n            channels: this.state.channels\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          return json.msg; // load: false,\n          //data: (json.msg),\n          // console.log(json);\n        }).then(json => this.setState({\n          loading: false,\n          data: json.msg\n        }));\n      });\n    };\n\n    this.gotowrite = () => {\n      fetch('http://localhost:8080/api/write', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: this.state.text,\n          channels: this.state.channels,\n          orgwrite: this.state.orgwrite,\n          peerwrite: this.state.peerwrite\n        })\n      }).then(function (data) {\n        console.log('Request success: ', data);\n      }).catch(function (error) {\n        console.log('Request failure: ', error);\n      });\n    };\n\n    this.gotoread = () => {\n      fetch('http://localhost:8080/api/read', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          channels: this.state.channels,\n          orgwrite: this.state.orgwrite,\n          peerwrite: this.state.peerwrite\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        var myWindow = window.open(\"\", \"\", \"width=200, height=100\");\n        myWindow.document.write(json.msg);\n        myWindow.blur(); // alert(json.msg);\n        //console.log(json);\n      });\n    };\n\n    this.gotodown = () => {\n      fetch('http://localhost:8080/api/down', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: this.state.text,\n          channels: this.state.channels\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        alert(json.msg);\n        console.log(json);\n      });\n    };\n  }\n\n  createSelectItems() {\n    const Option = Select;\n    var arr = [...this.state.organizations];\n    var per = 0;\n    let items = [];\n    var k = 0;\n    var z;\n    console.log('length: ' + arr.length); // +id\n\n    for (var i = 0; i < arr.length; i++) {\n      if (arr.length > 0) {\n        console.log('arri: ' + arr[i].peers); // +id\n\n        for (var j = 0; j < arr[i].peers; j++) {\n          z = i + 1;\n          k = z * 10 + j;\n          console.log('k: ' + k); // +id\n\n          items.push(React.createElement(Select, {\n            key: k,\n            value: k,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, 'peer' + j + '.' + 'org' + z));\n        }\n      } //here I will be creating my options dynamically based on\n      //what props are currently passed to the parent component\n\n    }\n\n    return items;\n  }\n\n  onChange1(value) {\n    console.log(\"selected \".concat(value));\n  }\n\n  onBlur() {\n    console.log('blur');\n  }\n\n  onFocus() {\n    console.log('focus');\n  }\n\n  onSearch(val) {\n    console.log('search:', val);\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          loading = _this$state.loading;\n    const Option = Select;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"WELCOME\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"blockchain pro\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"PRESS + TO ADD ORG\"), React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"plus\",\n      onClick: this.onAddOrganization,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Organizations\"), this.state.organizations.map(o => {\n      return React.createElement(\"div\", {\n        key: o.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Organization Name\",\n        value: o.name,\n        onChange: e => this.onChangeorganizationName(e, o),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(InputNumber, {\n        value: o.peers,\n        onChange: e => this.addPeers(e, o),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }));\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"press here for setting the configuration\"), React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"play-circle\",\n      onClick: this.gotoaskserver,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"press here for build the network\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotobuild,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Build the nerwork\")), loading ? React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"write file line \"), React.createElement(Input, {\n      placeholder: \"write file line\",\n      value: this.state.text,\n      onChange: this.onTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"      peers organization         \"), React.createElement(Select, {\n      onChange: this.onDropdownSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, this.createSelectItems()), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotowrite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"submit write\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \" press here to read the chain   \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"      peers organization         \"), React.createElement(Select, {\n      onChange: this.onDropdownSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, this.createSelectItems()), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotoread,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"read chain\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"press here for down the network\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotodown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"down the network\")));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Chain, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 311\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/amal/Desktop/test6/fabric-samples/chainui/client/src/index.js"],"names":["React","Component","ReactDOM","Form","Input","Button","InputNumber","Select","Spin","Icon","load","Alert","Popout","NewWindow","FetchLoader","LoadingSpinner","BounceLoader","Chain","state","channels","organizations","opvalue","text","orgwrite","peerwrite","orgState","loading","data","onChannelsChange","e","setState","target","value","onTextChange","onAddOrganization","arr","push","id","length","toString","name","peers","onDropdownSelected","console","log","x","y","onChangeorganizationName","o","addPeers","addorgwrite","addpeerwrite","gotoaskserver","fetch","method","headers","body","JSON","stringify","then","catch","error","gotobuild","response","json","msg","gotowrite","gotoread","myWindow","window","open","document","write","blur","gotodown","alert","createSelectItems","Option","per","items","k","z","i","j","onChange1","onBlur","onFocus","onSearch","val","render","map","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form, Input, Button, InputNumber, Select, Spin, Icon, load,  Alert } from 'antd';\nimport Popout from 'react-popout'\nimport NewWindow from 'react-new-window'\nimport FetchLoader from 'fetch-loader-react';\nimport LoadingSpinner from 'react-loader-spinner'\nimport BounceLoader from 'react-spinners/BounceLoader'\n\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nclass Chain extends React.Component {\n  \n  // state = { channels: \"A, B, C\", organizations: [{name: \"x\", peers: 100}, {name: \"y\", peers: 200}] };\n   state = { channels: \"\", organizations: [], opvalue: \"\", text: \"\", orgwrite: 0, peerwrite: 0, orgState: [],  loading: false, data:\"\"};\n\n  onChannelsChange = e => {\n    this.setState({channels: e.target.value});\n  };\n  onTextChange = e => {\n    this.setState({text: e.target.value});\n  };\n\n  onAddOrganization = () => {\n    const arr = [...this.state.organizations];\n    arr.push({id: arr.length.toString(), name: 'org'+(arr.length+1), peers: 0});\n    this.setState({organizations: arr});\n    \n  };\n\n  createSelectItems() {\n     const Option = Select;\n     var arr = [...this.state.organizations];\n     var per=0;\n     let items = []; \n     var k=0;\n     var z;\n     console.log('length: ' +arr.length); // +id\n     for (var i = 0; i < arr.length; i++) {\n          if(arr.length>0){\n          console.log('arri: ' + arr[i].peers); // +id\n          for (var j=0;j<arr[i].peers; j++){\n                z= i+1;       \n                k= z*10+j; \n                console.log('k: ' + k); // +id\n                items.push(<Select  key={k} value={k}>{'peer'+j+'.'+'org'+z}</Select >); \n         }  \n\t}\n          //here I will be creating my options dynamically based on\n          //what props are currently passed to the parent component\n     }\n     return items;\n  };  \n\n  onDropdownSelected = value => {\n     console.log(`selected ${value}`);\n     var x = value%10;\n     var y = value/10;\n     this.setState({orgwrite: y});\n     this.setState({peerwrite: x});\n     console.log(`x ${x}`);\n     console.log(`y ${y}`);\n    //here you will see the current selected value of the select input\n  };\n\n  onChangeorganizationName = (e, o) => {\n    const arr = [...this.state.organizations];\n    console.log('name: ' + e.target.value);\n    console.log('id: ' + o.id); // +id\n    arr[o.id]={id: o.id, name:e.target.value, peers: o.peers}\n    this.setState({organizations: arr});\n\n    // TODO: change the current array (organizations) with the new name\n  };\n\n  addPeers = (e, o) => {\n    const arr = [...this.state.organizations];\n    arr[o.id]={id: o.id, name:o.name, peers: e}\n    this.setState({organizations: arr});\n  };\n\n addorgwrite = value => {\n  this.setState({orgwrite: value});\n  console.log('changed', value);\n  };\n addpeerwrite = value => {\n  this.setState({peerwrite: value});\n  console.log('changed', value);\n  };\n\n  gotoaskserver = async () => {\n   await fetch('http://localhost:8080/api/create', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         organizations :this.state.organizations,\n         channels :this.state.channels,\n    })\n  })\n  .then(function (data) {  \n    console.log('Request success: ', data);  \n  })  \n  .catch(function (error) {  \n    console.log('Request failure: ', error);  \n  });\n\n  };\n\n  gotobuild =  () => {\n   this.setState({ loading: true }, () => {\n     fetch('http://localhost:8080/api/build', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         organizations :this.state.organizations,\n         channels :this.state.channels,\n    })\n  })\n  .then(function (response) {  \n        return response.json();\n \n  })  \n  .then(function(json) {\n     return (json.msg);\n\n    // load: false,\n     //data: (json.msg),\n\n   // console.log(json);\n  })   .then(json => this.setState({\n        loading: false,\n        data: json.msg,\n      }));\n  });\n\n  };\n\n  gotowrite = () => {\n   fetch('http://localhost:8080/api/write', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         text :this.state.text,\n         channels :this.state.channels,\n         orgwrite: this.state.orgwrite, \n         peerwrite: this.state.peerwrite,\n    })\n  })\n  .then(function (data) {  \n    console.log('Request success: ', data);  \n  })  \n  .catch(function (error) {  \n    console.log('Request failure: ', error);  \n  });\n\n  };\n\n  gotoread = () => {\n     fetch('http://localhost:8080/api/read', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         channels :this.state.channels,\n         orgwrite: this.state.orgwrite, \n         peerwrite: this.state.peerwrite,\n    })\n  })\n  .then(function (response) {  \n        return  response.json();\n\n \n  })  \n  .then(function(json) {\n       var myWindow = window.open(\"\", \"\", \"width=200, height=100\");\n        myWindow.document.write(json.msg);\n        myWindow.blur();\n\n      // alert(json.msg);\n    //console.log(json);\n  });\n\n  };\n\n\n  gotodown = () => {\n   fetch('http://localhost:8080/api/down', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         text :this.state.text,\n         channels :this.state.channels,\n    })\n  })\n  .then(function (response) {  \n        return response.json();\n \n  })  \n  .then(function(json) {\n    alert(json.msg);\n    console.log(json);\n  });\n\n  };\n\n  onChange1(value) {\n  console.log(`selected ${value}`)\n  };\n\n  onBlur() {\n  console.log('blur')\n  };\n\n  onFocus() {\n  console.log('focus')\n  };\n\n  onSearch(val) {\n  console.log('search:', val)\n  };\n   \n  \n  render() {\n    const { data, loading } = this.state;\n    const Option = Select;\n    return (\n        <div>\n        <div>\n          <div>WELCOME</div>\n          <div>blockchain pro</div>\n          <div>PRESS + TO ADD ORG</div>\n          <Button type=\"primary\" shape=\"circle\" icon=\"plus\" onClick={this.onAddOrganization} />\n          <div>Organizations</div>\n          {this.state.organizations.map(o => {\n            return <div key={o.id}>\n              <Input placeholder='Organization Name' value={o.name} onChange={(e) => this.onChangeorganizationName(e, o)}/>\n              <InputNumber value={o.peers} onChange={(e) => this.addPeers(e, o)} />\n\n            </div>\n          })}\n          <div>press here for setting the configuration</div>\n         <Button type=\"primary\" shape=\"circle\" icon=\"play-circle\" onClick={this.gotoaskserver} />\n\n        </div>\n\n\t<div>\n\n\t</div>\n          <div>press here for build the network</div>\n           \n        <div>\n         <Button type=\"primary\" onClick={this.gotobuild} >Build the nerwork</Button>\n        </div>\n         {loading ? <Spin /> : <div></div> }\n\n          <Form.Item>\n          <div>write file line </div>\n\n          <Input placeholder='write file line'\n            value={this.state.text}\n            onChange={this.onTextChange}/>\n          <div>      peers organization         </div>\n\t <Select  onChange={this.onDropdownSelected}>\n\t       {this.createSelectItems()}\n\t </Select>\n\n         <Button type=\"primary\"  onClick={this.gotowrite} >submit write</Button>\n        </Form.Item>\n        <div>\n\n        </div>\n\n      <div> press here to read the chain   </div>\n          <div>      peers organization         </div>\n\t <Select  onChange={this.onDropdownSelected}>\n\t       {this.createSelectItems()}\n\t </Select>\n\n         <Button type=\"primary\" onClick={this.gotoread} >read chain</Button>\n       \n        <div>\n\n        </div>\n\n\n          <div>press here for down the network</div>\n      \n        <div>\n         <Button type=\"primary\" onClick={this.gotodown} >down the network</Button>\n        </div>\n      \n   </div>\n\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Chain />,\n  document.getElementById('root')\n);\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}