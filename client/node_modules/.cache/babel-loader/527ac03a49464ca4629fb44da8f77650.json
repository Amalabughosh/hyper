{"ast":null,"code":"var _jsxFileName = \"/home/amal/Desktop/project/blockchain_pro/fabric-samples/client/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form, Input, Button, InputNumber, Select, Spin, Icon, load, Alert } from 'antd';\nimport Popout from 'react-popout';\nimport NewWindow from 'react-new-window';\nimport FetchLoader from 'fetch-loader-react';\nimport LoadingSpinner from 'react-loader-spinner';\nimport BounceLoader from 'react-spinners/BounceLoader';\nimport Img from 'react-image';\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nclass Chain extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channels: \"\",\n      organizations: [],\n      opvalue: \"\",\n      text: \"\",\n      orgwrite: 0,\n      peerwrite: 0,\n      orgState: [],\n      loading: false,\n      data: \"\"\n    };\n\n    this.onChannelsChange = e => {\n      this.setState({\n        channels: e.target.value\n      });\n    };\n\n    this.onTextChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.onAddOrganization = () => {\n      const arr = [...this.state.organizations];\n      arr.push({\n        id: arr.length.toString(),\n        name: 'org' + (arr.length + 1),\n        peers: 0\n      });\n      this.setState({\n        organizations: arr\n      });\n    };\n\n    this.onRmovOrganization = () => {\n      const arr = [...this.state.organizations];\n      arr.pop();\n      this.setState({\n        organizations: arr\n      });\n    };\n\n    this.onDropdownSelected = value => {\n      console.log(\"selected \".concat(value));\n      var x = value % 10;\n      var y = value / 10;\n      this.setState({\n        orgwrite: y\n      });\n      this.setState({\n        peerwrite: x\n      });\n      console.log(\"x \".concat(x));\n      console.log(\"y \".concat(y)); //here you will see the current selected value of the select input\n    };\n\n    this.onChangeorganizationName = (e, o) => {\n      const arr = [...this.state.organizations];\n      console.log('name: ' + e.target.value);\n      console.log('id: ' + o.id); // +id\n\n      arr[o.id] = {\n        id: o.id,\n        name: e.target.value,\n        peers: o.peers\n      };\n      this.setState({\n        organizations: arr\n      }); // TODO: change the current array (organizations) with the new name\n    };\n\n    this.addPeers = (e, o) => {\n      const arr = [...this.state.organizations];\n      arr[o.id] = {\n        id: o.id,\n        name: o.name,\n        peers: e\n      };\n      this.setState({\n        organizations: arr\n      });\n    };\n\n    this.addorgwrite = value => {\n      this.setState({\n        orgwrite: value\n      });\n      console.log('changed', value);\n    };\n\n    this.addpeerwrite = value => {\n      this.setState({\n        peerwrite: value\n      });\n      console.log('changed', value);\n    };\n\n    this.gotoaskserver = async () => {\n      await fetch('http://localhost:8080/api/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          organizations: this.state.organizations,\n          channels: this.state.channels\n        })\n      }).then(function (data) {\n        console.log('Request success: ', data);\n      }).catch(function (error) {\n        console.log('Request failure: ', error);\n      });\n    };\n\n    this.gotobuild = () => {\n      this.setState({\n        loading: true,\n        buildsuccess: false,\n        builddata: ''\n      }, () => {\n        fetch('http://localhost:8080/api/build', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            organizations: this.state.organizations,\n            channels: this.state.channels\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          // alert(json.msg);\n          return json; // load: false,\n          //data: (json.msg),\n          // console.log(json);\n        }).then(json => this.setState({\n          loading: false,\n          buildsuccess: true,\n          builddata: json.msg\n        }));\n      });\n    };\n\n    this.gotowrite = () => {\n      this.setState({\n        writeloading: true,\n        writesuccess: false,\n        writedata: ''\n      }, () => {\n        fetch('http://localhost:8080/api/write', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: this.state.text,\n            channels: this.state.channels,\n            orgwrite: this.state.orgwrite,\n            peerwrite: this.state.peerwrite\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          //alert(json.msg);\n          return json; // load: false,\n          //data: (json.msg),\n          // console.log(json);\n        }).then(result => this.setState({\n          writeloading: false,\n          writesuccess: true,\n          writedata: result.msg\n        }));\n      });\n    };\n\n    this.gotoread = () => {\n      this.setState({\n        readloading: true\n      }, () => {\n        fetch('http://localhost:8080/api/read', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            channels: this.state.channels,\n            orgwrite: this.state.orgwrite,\n            peerwrite: this.state.peerwrite\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          var i, line;\n          line = '';\n          var myWindow = window.open('', '', \"width=500, height=300\");\n\n          for (i = 0; i < json.msg.length; i++) {\n            if (json.msg[i] != '\\n') {\n              line += json.msg[i];\n            } else {\n              console.log(line);\n              myWindow.document.write(\"<p>\" + line + \"</p>\");\n              line = '';\n            }\n          } //myWindow.blur();\n          // alert(json.msg);\n          //console.log(json);\n\n        }).then(json => this.setState({\n          readloading: false\n        }));\n      });\n    };\n\n    this.gotodown = () => {\n      fetch('http://localhost:8080/api/down', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: this.state.text,\n          channels: this.state.channels\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        alert(json.msg);\n        console.log(json);\n      });\n    };\n  }\n\n  createSelectItems() {\n    const Option = Select;\n    var arr = [...this.state.organizations];\n    var per = 0;\n    let items = [];\n    var k = 0;\n    var z;\n    console.log('length: ' + arr.length); // +id\n\n    for (var i = 0; i < arr.length; i++) {\n      if (arr.length > 0) {\n        console.log('arri: ' + arr[i].peers); // +id\n\n        for (var j = 0; j < arr[i].peers; j++) {\n          z = i + 1;\n          k = z * 10 + j;\n          console.log('k: ' + k); // +id\n\n          items.push(React.createElement(Select, {\n            key: k,\n            value: k,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, 'peer' + j + '.' + 'org' + z));\n        }\n      } //here I will be creating my options dynamically based on\n      //what props are currently passed to the parent component\n\n    }\n\n    return items;\n  }\n\n  onChange1(value) {\n    console.log(\"selected \".concat(value));\n  }\n\n  onBlur() {\n    console.log('blur');\n  }\n\n  onFocus() {\n    console.log('focus');\n  }\n\n  onSearch(val) {\n    console.log('search:', val);\n  }\n\n  render() {\n    let Img = require('react-image');\n\n    const _this$state = this.state,\n          writedata = _this$state.writedata,\n          loading = _this$state.loading,\n          writeloading = _this$state.writeloading,\n          readloading = _this$state.readloading,\n          writesuccess = _this$state.writesuccess,\n          buildsuccess = _this$state.buildsuccess,\n          builddata = _this$state.builddata;\n    const Option = Select;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Img, {\n      src: \"https://www.cryptoninjas.net/wp-content/uploads/2017/12/blockchaincom.png\",\n      width: \"600\",\n      height: \"250\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"PRESS + TO ADD ORG\"), React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"plus\",\n      onClick: this.onAddOrganization,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Organizations\"), this.state.organizations.map(o => {\n      return React.createElement(\"div\", {\n        key: o.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Organization Name\",\n        value: o.name,\n        onChange: e => this.onChangeorganizationName(e, o),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(InputNumber, {\n        value: o.peers,\n        onChange: e => this.addPeers(e, o),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }));\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"minus\",\n      onClick: this.onRmovOrganization,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotobuild,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Set configuration and Build the nerwork\")), loading ? React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }) : buildsuccess ? React.createElement(Alert, {\n      message: builddata,\n      type: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"write file line \"), React.createElement(Input, {\n      placeholder: \"write file line\",\n      value: this.state.text,\n      onChange: this.onTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"      peers organization         \"), React.createElement(Select, {\n      onChange: this.onDropdownSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, this.createSelectItems()), writeloading ? React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }) : writesuccess ? React.createElement(Alert, {\n      message: writedata,\n      type: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotowrite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"submit write\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \" press here to read the chain   \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"      peers organization         \"), React.createElement(Select, {\n      onChange: this.onDropdownSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, this.createSelectItems()), readloading ? React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotoread,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"read chain\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"press here for down the network\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotodown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"down the network\")), React.createElement(Img, {\n      src: \"https://www.hyperledger.org/wp-content/uploads/2018/10/Hyperledger-Fabric.png\",\n      width: \"200\",\n      height: \"90\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }), React.createElement(Img, {\n      src: \"https://bilberry.io/img/partners/nokiabelllabs.png\",\n      width: \"350\",\n      height: \"250\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Chain, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 347\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/amal/Desktop/project/blockchain_pro/fabric-samples/client/src/index.js"],"names":["React","Component","ReactDOM","Form","Input","Button","InputNumber","Select","Spin","Icon","load","Alert","Popout","NewWindow","FetchLoader","LoadingSpinner","BounceLoader","Img","Chain","state","channels","organizations","opvalue","text","orgwrite","peerwrite","orgState","loading","data","onChannelsChange","e","setState","target","value","onTextChange","onAddOrganization","arr","push","id","length","toString","name","peers","onRmovOrganization","pop","onDropdownSelected","console","log","x","y","onChangeorganizationName","o","addPeers","addorgwrite","addpeerwrite","gotoaskserver","fetch","method","headers","body","JSON","stringify","then","catch","error","gotobuild","buildsuccess","builddata","response","json","msg","gotowrite","writeloading","writesuccess","writedata","result","gotoread","readloading","i","line","myWindow","window","open","document","write","gotodown","alert","createSelectItems","Option","per","items","k","z","j","onChange1","onBlur","onFocus","onSearch","val","render","require","map","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form, Input, Button, InputNumber, Select, Spin, Icon, load,  Alert } from 'antd';\nimport Popout from 'react-popout'\nimport NewWindow from 'react-new-window'\nimport FetchLoader from 'fetch-loader-react';\nimport LoadingSpinner from 'react-loader-spinner'\nimport BounceLoader from 'react-spinners/BounceLoader'\nimport Img from 'react-image'\n\n\n\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nclass Chain extends React.Component {\n  \n  // state = { channels: \"A, B, C\", organizations: [{name: \"x\", peers: 100}, {name: \"y\", peers: 200}] };\n   state = { channels: \"\", organizations: [], opvalue: \"\", text: \"\", orgwrite: 0, peerwrite: 0, orgState: [],  loading: false, data:\"\"};\n\n  onChannelsChange = e => {\n    this.setState({channels: e.target.value});\n  };\n  onTextChange = e => {\n    this.setState({text: e.target.value});\n  };\n\n  onAddOrganization = () => {\n    const arr = [...this.state.organizations];\n    arr.push({id: arr.length.toString(), name: 'org'+(arr.length+1), peers: 0});\n    this.setState({organizations: arr});\n    \n  };\n  onRmovOrganization = () => {\n    const arr = [...this.state.organizations];\n    arr.pop();\n    this.setState({organizations: arr});\n  };\n\n  createSelectItems() {\n     const Option = Select;\n     var arr = [...this.state.organizations];\n     var per=0;\n     let items = []; \n     var k=0;\n     var z;\n     console.log('length: ' +arr.length); // +id\n     for (var i = 0; i < arr.length; i++) {\n          if(arr.length>0){\n          console.log('arri: ' + arr[i].peers); // +id\n          for (var j=0;j<arr[i].peers; j++){\n                z= i+1;       \n                k= z*10+j; \n                console.log('k: ' + k); // +id\n                items.push(<Select  key={k} value={k}>{'peer'+j+'.'+'org'+z}</Select >); \n         }  \n\t}\n          //here I will be creating my options dynamically based on\n          //what props are currently passed to the parent component\n     }\n     return items;\n  };  \n\n  onDropdownSelected = value => {\n     console.log(`selected ${value}`);\n     var x = value%10;\n     var y = value/10;\n     this.setState({orgwrite: y});\n     this.setState({peerwrite: x});\n     console.log(`x ${x}`);\n     console.log(`y ${y}`);\n    //here you will see the current selected value of the select input\n  };\n\n  onChangeorganizationName = (e, o) => {\n    const arr = [...this.state.organizations];\n    console.log('name: ' + e.target.value);\n    console.log('id: ' + o.id); // +id\n    arr[o.id]={id: o.id, name:e.target.value, peers: o.peers}\n    this.setState({organizations: arr});\n\n    // TODO: change the current array (organizations) with the new name\n  };\n\n  addPeers = (e, o) => {\n    const arr = [...this.state.organizations];\n    arr[o.id]={id: o.id, name:o.name, peers: e}\n    this.setState({organizations: arr});\n  };\n\n addorgwrite = value => {\n  this.setState({orgwrite: value});\n  console.log('changed', value);\n  };\n addpeerwrite = value => {\n  this.setState({peerwrite: value});\n  console.log('changed', value);\n  };\n\n  gotoaskserver = async () => {\n   await fetch('http://localhost:8080/api/create', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         organizations :this.state.organizations,\n         channels :this.state.channels,\n    })\n  })\n  .then(function (data) {  \n    console.log('Request success: ', data);  \n  })  \n  .catch(function (error) {  \n    console.log('Request failure: ', error);  \n  });\n\n  };\n\n  gotobuild =  () => {\n   this.setState({ loading: true, buildsuccess: false, builddata:'' }, () => {\n     fetch('http://localhost:8080/api/build', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         organizations :this.state.organizations,\n         channels :this.state.channels,\n    })\n  })\n  .then(function (response) {  \n        return response.json();\n \n  })  \n  .then(function(json) {\n    // alert(json.msg);\n     return (json);\n     \n    // load: false,\n     //data: (json.msg),\n\n   // console.log(json);\n  })   .then(json => this.setState({\n        loading: false,\n\tbuildsuccess: true,\n        builddata: json.msg,\n      }));\n  });\n\n  };\n\n  gotowrite = () => {\n  this.setState({ writeloading: true, writesuccess: false, writedata: '' }, () => {\n   fetch('http://localhost:8080/api/write', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         text :this.state.text,\n         channels :this.state.channels,\n         orgwrite: this.state.orgwrite, \n         peerwrite: this.state.peerwrite,\n    })\n  })\n  .then(function (response) {  \n        return response.json();\n \n  })  \n  .then(function(json) {\n     //alert(json.msg);\n     return (json);\n     \n    // load: false,\n     //data: (json.msg),\n\n   // console.log(json);\n  })   .then(result  => this.setState({\n        writeloading: false,\n        writesuccess: true,\n        writedata: result.msg,\n      }));\n  });\n\n  };\n\n  gotoread = () => {\n     this.setState({ readloading: true }, () => {\n     fetch('http://localhost:8080/api/read', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         channels :this.state.channels,\n         orgwrite: this.state.orgwrite, \n         peerwrite: this.state.peerwrite,\n    })\n  })\n  .then(function (response) {  \n        return  response.json();\n  })  \n  .then(function(json) {\n       var i,line;\n       line='';\n\n       var myWindow = window.open('', '', \"width=500, height=300\");\n       for(i=0;i<json.msg.length;i++){\n          if(json.msg[i] != '\\n'){\n             line+=json.msg[i];\n          }\n          else{\n                          console.log(line);\n                   myWindow.document.write(\"<p>\" + line + \"</p>\");\n                   line='';\n          }\n        \n       }\n        //myWindow.blur();\n\n      // alert(json.msg);\n    //console.log(json);\n  })   .then(json => this.setState({\n        readloading: false,\n      }));\n  });\n\n  };\n\n\n  gotodown = () => {\n   fetch('http://localhost:8080/api/down', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         text :this.state.text,\n         channels :this.state.channels,\n    })\n  })\n  .then(function (response) {  \n        return response.json();\n \n  })  \n  .then(function(json) {\n    alert(json.msg);\n    console.log(json);\n  });\n\n  };\n\n  onChange1(value) {\n  console.log(`selected ${value}`)\n  };\n\n  onBlur() {\n  console.log('blur')\n  };\n\n  onFocus() {\n  console.log('focus')\n  };\n\n  onSearch(val) {\n  console.log('search:', val)\n  };\n   \n  \n  render() {\n    let Img = require('react-image');\n    const { writedata, loading,writeloading, readloading, writesuccess,buildsuccess ,builddata } = this.state;\n    const Option = Select;\n    return (\n        <div>\n        <div>\n          <Img src=\"https://www.cryptoninjas.net/wp-content/uploads/2017/12/blockchaincom.png\" width=\"600\" height=\"250\" />\n\n          <div>PRESS + TO ADD ORG</div>\n          <Button type=\"primary\" shape=\"circle\" icon=\"plus\" onClick={this.onAddOrganization} />\n          <div>Organizations</div>\n          {this.state.organizations.map(o => {\n            return <div key={o.id}>\n              <Input placeholder='Organization Name' value={o.name} onChange={(e) => this.onChangeorganizationName(e, o)}/>\n              <InputNumber value={o.peers} onChange={(e) => this.addPeers(e, o)} />\n\n            </div>\n          })}\n        <div>\n          <Button type=\"primary\" shape=\"circle\" icon=\"minus\" onClick={this.onRmovOrganization} />\n        </div>\n\n        </div>\n           \n        <div>\n         <Button type=\"primary\" onClick={this.gotobuild} >Set configuration and Build the nerwork</Button>\n        </div>\n         {loading ? <Spin />  : buildsuccess ? <Alert message={builddata} type=\"info\"  />   : <div></div> }\n\n          <Form.Item>\n          <div>write file line </div>\n\n          <Input placeholder='write file line'\n            value={this.state.text}\n            onChange={this.onTextChange}/>\n          <div>      peers organization         </div>\n\t <Select  onChange={this.onDropdownSelected}>\n\t       {this.createSelectItems()}\n\t </Select>\n            {writeloading ? <Spin /> : writesuccess ? <Alert message={writedata} type=\"info\"  />   : <div></div> }\n         <Button type=\"primary\"  onClick={this.gotowrite} >submit write</Button>\n        </Form.Item>\n        <div>\n\n        </div>\n\n      <div> press here to read the chain   </div>\n          <div>      peers organization         </div>\n\t <Select  onChange={this.onDropdownSelected}>\n\t       {this.createSelectItems()}\n\t </Select>\n\t   {readloading ? <Spin /> : <div></div> }\n         <Button type=\"primary\" onClick={this.gotoread} >read chain</Button>\n       \n        <div>\n\n        </div>\n\n\n          <div>press here for down the network</div>\n      \n        <div>\n         <Button type=\"primary\" onClick={this.gotodown} >down the network</Button>\n        </div>\n            <Img src=\"https://www.hyperledger.org/wp-content/uploads/2018/10/Hyperledger-Fabric.png\" width=\"200\" height=\"90\" />\n            <Img src=\"https://bilberry.io/img/partners/nokiabelllabs.png\" width=\"350\" height=\"250\" />\n   </div>\n\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Chain />,\n  document.getElementById('root')\n);\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}