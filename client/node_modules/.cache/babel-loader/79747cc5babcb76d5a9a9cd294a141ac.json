{"ast":null,"code":"var _jsxFileName = \"/home/amal/Desktop/test6/fabric-samples/chainui/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Input, Button, InputNumber, Select } from 'antd';\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nclass Chain extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channels: \"\",\n      organizations: [],\n      opvalue: \"\",\n      text: \"\",\n      write: 0\n    };\n\n    this.onChannelsChange = e => {\n      this.setState({\n        channels: e.target.value\n      });\n    };\n\n    this.onTextChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.onAddOrganization = () => {\n      const arr = [...this.state.organizations];\n      arr.push({\n        id: arr.length.toString(),\n        name: '',\n        peers: 0\n      });\n      this.setState({\n        organizations: arr\n      });\n    };\n\n    this.onChangeorganizationName = (e, o) => {\n      const arr = [...this.state.organizations];\n      console.log('name: ' + e.target.value);\n      console.log('id: ' + o.id); // +id\n\n      arr[o.id] = {\n        id: o.id,\n        name: e.target.value,\n        peers: o.peers\n      };\n      this.setState({\n        organizations: arr\n      }); // TODO: change the current array (organizations) with the new name\n    };\n\n    this.addPeers = (e, o) => {\n      const arr = [...this.state.organizations];\n      arr[o.id] = {\n        id: o.id,\n        name: o.name,\n        peers: o.peers + 1\n      };\n      this.setState({\n        organizations: arr\n      });\n    };\n\n    this.gotoaskserver = () => {\n      fetch('http://localhost:8080/api/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          organizations: this.state.organizations,\n          channels: this.state.channels\n        })\n      }).then(function (data) {\n        console.log('Request success: ', data);\n      }).catch(function (error) {\n        console.log('Request failure: ', error);\n      });\n    };\n\n    this.gotobuild = () => {\n      fetch('http://localhost:8080/api/build', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          organizations: this.state.organizations,\n          channels: this.state.channels\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        alert(json.msg);\n        console.log(json);\n      });\n    };\n\n    this.gotowrite = () => {\n      fetch('http://localhost:8080/api/write', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: this.state.text,\n          channels: this.state.channels\n        })\n      }).then(function (data) {\n        console.log('Request success: ', data);\n      }).catch(function (error) {\n        console.log('Request failure: ', error);\n      });\n    };\n\n    this.gotoread = () => {\n      fetch('http://localhost:8080/api/read', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          channels: this.state.channels\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        alert(json.msg);\n        console.log(json);\n      });\n    };\n\n    this.gotodown = () => {\n      fetch('http://localhost:8080/api/down', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: this.state.text,\n          channels: this.state.channels\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        alert(json.msg);\n        console.log(json);\n      });\n    };\n  }\n\n  addwrite(value) {\n    console.log('changed', value);\n  }\n\n  onChange1(value) {\n    console.log(\"selected \".concat(value));\n  }\n\n  onBlur() {\n    console.log('blur');\n  }\n\n  onFocus() {\n    console.log('focus');\n  }\n\n  onSearch(val) {\n    console.log('search:', val);\n  }\n\n  render() {\n    const Option = Select;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"WELCOME\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"blockchain pro\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"PRESS + TO ADD ORG\"), React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"plus\",\n      onClick: this.onAddOrganization,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Organizations\"), this.state.organizations.map(o => {\n      return React.createElement(\"div\", {\n        key: o.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Organization Name\",\n        value: o.name,\n        onChange: e => this.onChangeorganizationName(e, o),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(InputNumber, {\n        value: o.peers,\n        onChange: e => this.addPeers(e, o),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }));\n    }), React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"play-circle\",\n      onClick: this.gotoaskserver,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotobuild,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Build the nerwork\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"write file line \"), React.createElement(Input, {\n      placeholder: \"write file line\",\n      value: this.state.text,\n      onChange: this.onTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(InputNumber, {\n      min: 1,\n      max: 5,\n      defaultValue: 0,\n      value: this.state.write,\n      onChange: this.addwrite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotowrite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"submit write\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"    \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \" press here to read the chain   \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotoread,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"read chain\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotodown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"down the network\")));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Chain, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 240\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/amal/Desktop/test6/fabric-samples/chainui/client/src/index.js"],"names":["React","ReactDOM","Input","Button","InputNumber","Select","Chain","Component","state","channels","organizations","opvalue","text","write","onChannelsChange","e","setState","target","value","onTextChange","onAddOrganization","arr","push","id","length","toString","name","peers","onChangeorganizationName","o","console","log","addPeers","gotoaskserver","fetch","method","headers","body","JSON","stringify","then","data","catch","error","gotobuild","response","json","alert","msg","gotowrite","gotoread","gotodown","addwrite","onChange1","onBlur","onFocus","onSearch","val","render","Option","map","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Input, Button, InputNumber, Select } from 'antd';\n\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nclass Chain extends React.Component {\n  \n  // state = { channels: \"A, B, C\", organizations: [{name: \"x\", peers: 100}, {name: \"y\", peers: 200}] };\n   state = { channels: \"\", organizations: [], opvalue: \"\", text: \"\", write: 0};\n\n  onChannelsChange = e => {\n    this.setState({channels: e.target.value});\n  };\n  onTextChange = e => {\n    this.setState({text: e.target.value});\n  };\n\n  onAddOrganization = () => {\n    const arr = [...this.state.organizations];\n    arr.push({id: arr.length.toString(), name: '', peers: 0});\n    this.setState({organizations: arr});\n  };\n\n  onChangeorganizationName = (e, o) => {\n    const arr = [...this.state.organizations];\n    console.log('name: ' + e.target.value);\n    console.log('id: ' + o.id); // +id\n    arr[o.id]={id: o.id, name:e.target.value, peers: o.peers}\n    this.setState({organizations: arr});\n\n    // TODO: change the current array (organizations) with the new name\n  };\n\n  addPeers = (e, o) => {\n    const arr = [...this.state.organizations];\n    arr[o.id]={id: o.id, name:o.name, peers: o.peers+1}\n    this.setState({organizations: arr});\n  };\n\n addwrite (value) {\n  console.log('changed', value);\n  };\n\n\n\n\n\n\n\n\n\n\n\n  gotoaskserver = () => {\n   fetch('http://localhost:8080/api/create', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         organizations :this.state.organizations,\n         channels :this.state.channels,\n    })\n  })\n  .then(function (data) {  \n    console.log('Request success: ', data);  \n  })  \n  .catch(function (error) {  \n    console.log('Request failure: ', error);  \n  });\n\n  };\n\n  gotobuild = () => {\n   fetch('http://localhost:8080/api/build', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         organizations :this.state.organizations,\n         channels :this.state.channels,\n    })\n  })\n  .then(function (response) {  \n        return response.json();\n \n  })  \n  .then(function(json) {\n    alert(json.msg);\n    console.log(json);\n  });\n\n  };\n\n  gotowrite = () => {\n   fetch('http://localhost:8080/api/write', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         text :this.state.text,\n         channels :this.state.channels,\n    })\n  })\n  .then(function (data) {  \n    console.log('Request success: ', data);  \n  })  \n  .catch(function (error) {  \n    console.log('Request failure: ', error);  \n  });\n\n  };\n\n\n  gotoread = () => {\n   fetch('http://localhost:8080/api/read', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         channels :this.state.channels,\n    })\n  })\n  .then(function (response) {  \n        return response.json();\n \n  })  \n  .then(function(json) {\n    alert(json.msg);\n    console.log(json);\n  });\n\n  };\n\n\n  gotodown = () => {\n   fetch('http://localhost:8080/api/down', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         text :this.state.text,\n         channels :this.state.channels,\n    })\n  })\n  .then(function (response) {  \n        return response.json();\n \n  })  \n  .then(function(json) {\n    alert(json.msg);\n    console.log(json);\n  });\n\n  };\n\n  onChange1(value) {\n  console.log(`selected ${value}`)\n  };\n\n  onBlur() {\n  console.log('blur')\n  };\n\n  onFocus() {\n  console.log('focus')\n  };\n\n  onSearch(val) {\n  console.log('search:', val)\n  };\n   \n  \n  render() {\n    const Option = Select;\n    return (\n        <div>\n        <div>\n          <div>WELCOME</div>\n          <div>blockchain pro</div>\n          <div>PRESS + TO ADD ORG</div>\n          <Button type=\"primary\" shape=\"circle\" icon=\"plus\" onClick={this.onAddOrganization} />\n          <div>Organizations</div>\n          {this.state.organizations.map(o => {\n            return <div key={o.id}>\n              <Input placeholder='Organization Name' value={o.name} onChange={(e) => this.onChangeorganizationName(e, o)}/>\n              <InputNumber value={o.peers} onChange={(e) => this.addPeers(e, o)} />\n\n            </div>\n          })}\n\n         <Button type=\"primary\" shape=\"circle\" icon=\"play-circle\" onClick={this.gotoaskserver} />\n\n        </div>\n\n\t<div>\n\n\t</div>\n\n        <div>\n         <Button type=\"primary\" onClick={this.gotobuild} >Build the nerwork</Button>\n        </div>\n\n  \n          <div>write file line </div>\n          <Input placeholder='write file line'\n            value={this.state.text}\n            onChange={this.onTextChange}/>\n            <InputNumber min={1} max={5} defaultValue={0} value={this.state.write} onChange={ this.addwrite} />\n        <div>\n         <Button type=\"primary\"  onClick={this.gotowrite} >submit write</Button>\n        </div>\n\n       <div>    </div>\n       <div> press here to read the chain   </div>\n        <div>\n         <Button type=\"primary\" onClick={this.gotoread} >read chain</Button>\n        </div>\n\n\n        <div>\n         <Button type=\"primary\" onClick={this.gotodown} >down the network</Button>\n        </div>\n      \n   </div>\n\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Chain />,\n  document.getElementById('root')\n);\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}