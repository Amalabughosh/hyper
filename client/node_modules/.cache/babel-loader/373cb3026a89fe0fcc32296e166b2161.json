{"ast":null,"code":"var _jsxFileName = \"/home/amal/Desktop/project/blockchain_pro/fabric-samples/client/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form, Input, Button, InputNumber, Select, Spin, Icon, load, Alert, Checkbox } from 'antd';\nimport Popout from 'react-popout';\nimport NewWindow from 'react-new-window';\nimport FetchLoader from 'fetch-loader-react';\nimport LoadingSpinner from 'react-loader-spinner';\nimport BounceLoader from 'react-spinners/BounceLoader';\nimport Img from 'react-image';\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nclass Chain extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channel: [],\n      organizations: [],\n      opvalue: \"\",\n      text: \"\",\n      orgwrite: 0,\n      peerwrite: 0,\n      chnlwrite: 0,\n      orgState: [],\n      loading: false,\n      data: \"\"\n    };\n\n    this.onChannelsChange = e => {\n      this.setState({\n        channels: e.target.value\n      });\n    };\n\n    this.onTextChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.onAddOrganization = () => {\n      const arr = [...this.state.organizations];\n      const oarr = [...this.state.orgState];\n      arr.push({\n        id: arr.length.toString(),\n        name: 'org' + (arr.length + 1),\n        peers: 0\n      });\n      oarr.push('org' + (oarr.length + 1));\n      this.setState({\n        organizations: arr\n      });\n      this.setState({\n        orgState: oarr\n      });\n    };\n\n    this.onAddChannel = () => {\n      const arr = [...this.state.channel];\n      arr.push({\n        id: arr.length.toString(),\n        name: 'channel' + (arr.length + 1),\n        list: []\n      });\n      this.setState({\n        channel: arr\n      });\n    };\n\n    this.onRmovOrganization = () => {\n      const arr = [...this.state.organizations];\n      arr.pop();\n      this.setState({\n        organizations: arr\n      });\n      const arrorg = [...this.state.orgState];\n      arrorg.pop();\n      this.setState({\n        orgState: arrorg\n      });\n    };\n\n    this.onRmovChannel = () => {\n      const arr = [...this.state.channel];\n      arr.pop();\n      this.setState({\n        channel: arr\n      });\n    };\n\n    this.onDropdownSelected = value => {\n      console.log(\"selected \".concat(value));\n      var x = value % 10;\n      var y = value / 10;\n      this.setState({\n        orgwrite: y\n      });\n      this.setState({\n        peerwrite: x\n      });\n      console.log(\"x \".concat(x));\n      console.log(\"y \".concat(y)); //here you will see the current selected value of the select input\n    };\n\n    this.onDropdownSelectedchnl = value => {\n      console.log(\"selected \".concat(value));\n      this.setState({\n        chnlwrite: value\n      }); //here you will see the current selected value of the select input\n    };\n\n    this.onChangeorganizationName = (e, o) => {\n      const arr = [...this.state.organizations];\n      console.log('name: ' + e.target.value);\n      console.log('id: ' + o.id); // +id\n\n      arr[o.id] = {\n        id: o.id,\n        name: e.target.value,\n        peers: o.peers\n      };\n      this.setState({\n        organizations: arr\n      }); // TODO: change the current array (organizations) with the new name\n    };\n\n    this.addPeers = (e, o) => {\n      const arr = [...this.state.organizations];\n      arr[o.id] = {\n        id: o.id,\n        name: o.name,\n        peers: e\n      };\n      this.setState({\n        organizations: arr\n      });\n    };\n\n    this.oncannelChange = (e, o) => {\n      const arr = [...this.state.channel];\n      arr[o.id] = {\n        id: o.id,\n        name: o.name,\n        list: e\n      };\n      console.log('id: ' + o.id); // +id\n\n      console.log('arr ' + e); // +id\n\n      this.setState({\n        channel: arr\n      });\n    };\n\n    this.addorgwrite = value => {\n      this.setState({\n        orgwrite: value\n      });\n      console.log('changed', value);\n    };\n\n    this.addpeerwrite = value => {\n      this.setState({\n        peerwrite: value\n      });\n      console.log('changed', value);\n    };\n\n    this.gotoaskserver = async () => {\n      await fetch('http://localhost:8080/api/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          organizations: this.state.organizations,\n          channel: this.state.channel\n        })\n      }).then(function (data) {\n        console.log('Request success: ', data);\n      }).catch(function (error) {\n        console.log('Request failure: ', error);\n      });\n    };\n\n    this.gotobuild = async () => {\n      this.setState({\n        loading: true,\n        buildsuccess: false,\n        builddata: ''\n      }, async () => {\n        await fetch('http://localhost:8080/api/build', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            organizations: this.state.organizations,\n            channel: this.state.channel\n          })\n        }).then(async function (response) {\n          return await response.json();\n        }).then(function (json) {\n          alert(json.msg);\n          console.log(json.msg);\n          return json; // load: false,\n          //data: (json.msg),\n          // console.log(json);\n        }).then(json => this.setState({\n          loading: false,\n          buildsuccess: true,\n          builddata: json.msg\n        }));\n      });\n    };\n\n    this.gotowrite = () => {\n      this.setState({\n        writeloading: true,\n        writesuccess: false,\n        writedata: ''\n      }, () => {\n        fetch('http://localhost:8080/api/write', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: this.state.text,\n            channels: this.state.channels,\n            orgwrite: this.state.orgwrite,\n            peerwrite: this.state.peerwrite,\n            chnlwrite: this.state.chnlwrite\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          //alert(json.msg);\n          return json; // load: false,\n          //data: (json.msg),\n          // console.log(json);\n        }).then(result => this.setState({\n          writeloading: false,\n          writesuccess: true,\n          writedata: result.msg\n        }));\n      });\n    };\n\n    this.gotoread = () => {\n      this.setState({\n        readloading: true\n      }, () => {\n        fetch('http://localhost:8080/api/read', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            channels: this.state.channels,\n            orgwrite: this.state.orgwrite,\n            peerwrite: this.state.peerwrite\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          var i, line;\n          line = '';\n          var myWindow = window.open('', '', \"width=500, height=300\");\n\n          for (i = 0; i < json.msg.length; i++) {\n            if (json.msg[i] != '\\n') {\n              line += json.msg[i];\n            } else {\n              console.log(line);\n              myWindow.document.write(\"<p>\" + line + \"</p>\");\n              line = '';\n            }\n          } //myWindow.blur();\n          // alert(json.msg);\n          //console.log(json);\n\n        }).then(json => this.setState({\n          readloading: false\n        }));\n      });\n    };\n\n    this.gotodown = () => {\n      fetch('http://localhost:8080/api/down', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: this.state.text,\n          channels: this.state.channels\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        alert(json.msg);\n        console.log(json);\n      });\n    };\n  }\n\n  createSelectItems() {\n    const Option = Select;\n    var arr = [...this.state.organizations];\n    var per = 0;\n    let items = [];\n    var k = 0;\n    var z;\n    console.log('length: ' + arr.length); // +id\n\n    if (this.state.chnlwrite == 0) {\n      for (var i = 0; i < arr.length; i++) {\n        if (arr.length > 0) {\n          console.log('arri: ' + arr[i].peers); // +id\n\n          for (var j = 0; j < arr[i].peers; j++) {\n            z = i + 1;\n            k = z * 10 + j;\n            console.log('k: ' + k); // +id\n\n            items.push(React.createElement(Select, {\n              key: k,\n              value: k,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75\n              },\n              __self: this\n            }, 'peer' + j + '.' + 'org' + z));\n          }\n        } //here I will be creating my options dynamically based on\n        //what props are currently passed to the parent component\n\n      }\n    } else {\n      const arr1 = [...this.state.channel];\n\n      if (arr1.length > 0) {\n        var chnl = this.state.chnlwrite - 1;\n\n        for (var i = 0; i < arr1[chnl].list.length; i++) {\n          console.log('arr1[chnl].list: ' + arr1[chnl].list); // +id\n\n          for (var j = 0; j < arr[arr1[chnl].list[i][3] - 1].peers; j++) {\n            z = arr1[chnl].list[i][3];\n            k = z * 10 + j;\n            console.log('k: ' + k); // +id\n\n            items.push(React.createElement(Select, {\n              key: k,\n              value: k,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96\n              },\n              __self: this\n            }, 'peer' + j + '.' + 'org' + z));\n          }\n        }\n      }\n    }\n\n    return items;\n  }\n\n  createSelectItemschnl() {\n    const Option = Select;\n    var arr = [...this.state.channel];\n    let items = [React.createElement(Select, {\n      key: 0,\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, 'channelall')];\n    var k = 0;\n    var z;\n    console.log('length: ' + arr.length); // +id\n\n    for (var i = 0; i < arr.length; i++) {\n      z = i + 1;\n      items.push(React.createElement(Select, {\n        key: z,\n        value: z,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, 'channel' + z));\n    } //here I will be creating my options dynamically based on\n    //what props are currently passed to the parent component\n\n\n    return items;\n  }\n\n  onChange1(value) {\n    console.log(\"selected \".concat(value));\n  }\n\n  onBlur() {\n    console.log('blur');\n  }\n\n  onFocus() {\n    console.log('focus');\n  }\n\n  onSearch(val) {\n    console.log('search:', val);\n  }\n\n  render() {\n    let Img = require('react-image');\n\n    const _this$state = this.state,\n          writedata = _this$state.writedata,\n          loading = _this$state.loading,\n          writeloading = _this$state.writeloading,\n          readloading = _this$state.readloading,\n          writesuccess = _this$state.writesuccess,\n          buildsuccess = _this$state.buildsuccess,\n          builddata = _this$state.builddata,\n          orgState = _this$state.orgState;\n    const Option = Select;\n    const CheckboxGroup = Checkbox.Group;\n    const plainOptions = ['Apple', 'Pear', 'Orange'];\n    const checkedList = [];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(Img, {\n      src: \"https://www.cryptoninjas.net/wp-content/uploads/2017/12/blockchaincom.png\",\n      width: \"600\",\n      height: \"250\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"PRESS + TO ADD ORG\"), React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"plus\",\n      onClick: this.onAddOrganization,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Organizations\"), this.state.organizations.map(o => {\n      return React.createElement(\"div\", {\n        key: o.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Organization Name\",\n        value: o.name,\n        onChange: e => this.onChangeorganizationName(e, o),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }), React.createElement(InputNumber, {\n        value: o.peers,\n        onChange: e => this.addPeers(e, o),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }));\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"minus\",\n      onClick: this.onRmovOrganization,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"PRESS + TO ADD  new channels (by default you have the public channel with all the organizations)\"), React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"plus\",\n      onClick: this.onAddChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"Channel\"), this.state.channel.map(o => {\n      return React.createElement(\"div\", {\n        key: o.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"channel Name\",\n        value: o.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }), React.createElement(CheckboxGroup, {\n        options: orgState,\n        value: o.list,\n        onChange: e => this.oncannelChange(e, o),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }));\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"minus\",\n      onClick: this.onRmovChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotoaskserver,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"Set configuration \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotobuild,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"Set configuration and Build the nerwork\")), loading ? React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }) : buildsuccess ? React.createElement(Alert, {\n      message: builddata,\n      type: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \"write file line \"), React.createElement(Input, {\n      placeholder: \"write file line\",\n      value: this.state.text,\n      onChange: this.onTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"      peers organization         \"), React.createElement(Select, {\n      onChange: this.onDropdownSelectedchnl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, this.createSelectItemschnl()), React.createElement(Select, {\n      onChange: this.onDropdownSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, this.createSelectItems()), writeloading ? React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }) : writesuccess ? React.createElement(Alert, {\n      message: writedata,\n      type: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotowrite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, \"submit write\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, \" press here to read the chain   \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"      peers organization         \"), React.createElement(Select, {\n      onChange: this.onDropdownSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, this.createSelectItems()), readloading ? React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotoread,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, \"read chain\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \"press here for down the network\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotodown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \"down the network\")), React.createElement(Img, {\n      src: \"https://www.hyperledger.org/wp-content/uploads/2018/10/Hyperledger-Fabric.png\",\n      width: \"200\",\n      height: \"90\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }), React.createElement(Img, {\n      src: \"https://bilberry.io/img/partners/nokiabelllabs.png\",\n      width: \"350\",\n      height: \"250\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Chain, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 451\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/amal/Desktop/project/blockchain_pro/fabric-samples/client/src/index.js"],"names":["React","Component","ReactDOM","Form","Input","Button","InputNumber","Select","Spin","Icon","load","Alert","Checkbox","Popout","NewWindow","FetchLoader","LoadingSpinner","BounceLoader","Img","Chain","state","channel","organizations","opvalue","text","orgwrite","peerwrite","chnlwrite","orgState","loading","data","onChannelsChange","e","setState","channels","target","value","onTextChange","onAddOrganization","arr","oarr","push","id","length","toString","name","peers","onAddChannel","list","onRmovOrganization","pop","arrorg","onRmovChannel","onDropdownSelected","console","log","x","y","onDropdownSelectedchnl","onChangeorganizationName","o","addPeers","oncannelChange","addorgwrite","addpeerwrite","gotoaskserver","fetch","method","headers","body","JSON","stringify","then","catch","error","gotobuild","buildsuccess","builddata","response","json","alert","msg","gotowrite","writeloading","writesuccess","writedata","result","gotoread","readloading","i","line","myWindow","window","open","document","write","gotodown","createSelectItems","Option","per","items","k","z","j","arr1","chnl","createSelectItemschnl","onChange1","onBlur","onFocus","onSearch","val","render","require","CheckboxGroup","Group","plainOptions","checkedList","map","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form, Input, Button, InputNumber, Select, Spin, Icon, load,  Alert, Checkbox  } from 'antd';\nimport Popout from 'react-popout'\nimport NewWindow from 'react-new-window'\nimport FetchLoader from 'fetch-loader-react';\nimport LoadingSpinner from 'react-loader-spinner'\nimport BounceLoader from 'react-spinners/BounceLoader'\nimport Img from 'react-image'\n\n\n\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nclass Chain extends React.Component {\n  \n  // state = { channels: \"A, B, C\", organizations: [{name: \"x\", peers: 100}, {name: \"y\", peers: 200}] };\n   state = { channel: [], organizations: [], opvalue: \"\", text: \"\", orgwrite: 0, peerwrite: 0, chnlwrite: 0,orgState: [],  loading: false, data:\"\"};\n\n  onChannelsChange = e => {\n    this.setState({channels: e.target.value});\n  };\n  onTextChange = e => {\n    this.setState({text: e.target.value});\n  };\n\n  onAddOrganization = () => {\n    const arr = [...this.state.organizations];\n    const oarr = [...this.state.orgState];\n    arr.push({id: arr.length.toString(), name: 'org'+(arr.length+1), peers: 0});\n    oarr.push('org'+(oarr.length+1));\n    this.setState({organizations: arr});\n    this.setState({orgState: oarr});\n  };\n\n  onAddChannel = () => {\n    const arr = [...this.state.channel];\n    arr.push({id: arr.length.toString(), name: 'channel'+(arr.length+1), list: []});\n    this.setState({channel: arr});\n    \n  };\n\n  onRmovOrganization = () => {\n    const arr = [...this.state.organizations];\n    arr.pop();\n    this.setState({organizations: arr});\n    const arrorg = [...this.state.orgState];\n    arrorg.pop();\n    this.setState({orgState: arrorg});\n  };\n\n  onRmovChannel = () => {\n    const arr = [...this.state.channel];\n    arr.pop();\n    this.setState({channel: arr});\n  };\n\n  createSelectItems() {\n     const Option = Select;\n     var arr = [...this.state.organizations];\n     var per=0;\n     let items = []; \n     var k=0;\n     var z;\n     console.log('length: ' +arr.length); // +id\n     if (this.state.chnlwrite == 0) {\n     for (var i = 0; i < arr.length; i++) {\n          if(arr.length>0){\n          console.log('arri: ' + arr[i].peers); // +id\n          for (var j=0;j<arr[i].peers; j++){\n                z= i+1;       \n                k= z*10+j; \n                console.log('k: ' + k); // +id\n                items.push(<Select  key={k} value={k}>{'peer'+j+'.'+'org'+z}</Select >); \n         }  \n\t}\n          //here I will be creating my options dynamically based on\n          //what props are currently passed to the parent component\n     }\n}\n\n\n\n   else{\n const arr1 = [...this.state.channel];\n    if (arr1.length>0){\n    var chnl=this.state.chnlwrite-1;\n   \n     for (var i = 0; i < arr1[chnl].list.length; i++) {\n           console.log('arr1[chnl].list: ' +arr1[chnl].list); // +id\n          for (var j=0;j<arr[(arr1[chnl].list[i][3])-1].peers; j++){\n                z= (arr1[chnl].list[i][3]);       \n                k= z*10+j; \n                console.log('k: ' + k); // +id\n                items.push(<Select  key={k} value={k}>{'peer'+j+'.'+'org'+z}</Select >); \n \n\t}\n\n   }\n     }\n\n   }\n     return items;\n  };  \n\n  onDropdownSelected = value => {\n     console.log(`selected ${value}`);\n     var x = value%10;\n     var y = value/10;\n     this.setState({orgwrite: y});\n     this.setState({peerwrite: x});\n     console.log(`x ${x}`);\n     console.log(`y ${y}`);\n    //here you will see the current selected value of the select input\n  };\n\n\n  createSelectItemschnl() {\n     const Option = Select;\n     var arr = [...this.state.channel];\n     let items = [<Select  key={0} value={0}>{'channelall'}</Select >]; \n     var k=0;\n     var z;\n     console.log('length: ' +arr.length); // +id\n     for (var i = 0; i < arr.length; i++) {\n                z= i+1;       \n                items.push(<Select  key={z} value={z}>{'channel' +z}</Select >);   \n\t}\n          //here I will be creating my options dynamically based on\n          //what props are currently passed to the parent component\n     return items;\n  };  \n\n  onDropdownSelectedchnl = value => {\n     console.log(`selected ${value}`);\n     this.setState({chnlwrite: value});\n    //here you will see the current selected value of the select input\n  };\n\n  onChangeorganizationName = (e, o) => {\n    const arr = [...this.state.organizations];\n    console.log('name: ' + e.target.value);\n    console.log('id: ' + o.id); // +id\n    arr[o.id]={id: o.id, name:e.target.value, peers: o.peers}\n    this.setState({organizations: arr});\n\n    // TODO: change the current array (organizations) with the new name\n  };\n\n  addPeers = (e, o) => {\n    const arr = [...this.state.organizations];\n    arr[o.id]={id: o.id, name:o.name, peers: e}\n    this.setState({organizations: arr});\n  };\n\n\n  oncannelChange = (e, o) => {\n    const arr = [...this.state.channel];\n    arr[o.id]={id: o.id, name:o.name, list: e}\n    console.log('id: ' + o.id); // +id\n    console.log('arr ' + e); // +id\n    this.setState({channel : arr});\n  };\n\n\n addorgwrite = value => {\n  this.setState({orgwrite: value});\n  console.log('changed', value);\n  };\n addpeerwrite = value => {\n  this.setState({peerwrite: value});\n  console.log('changed', value);\n  };\n\n  gotoaskserver = async () => {\n   await fetch('http://localhost:8080/api/create', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         organizations :this.state.organizations,\n         channel :this.state.channel,\n    })\n  })\n  .then(function (data) {  \n    console.log('Request success: ', data);  \n  })  \n  .catch(function (error) {  \n    console.log('Request failure: ', error);  \n  });\n\n  };\n\n  gotobuild = async   () => {\n   this.setState({ loading: true, buildsuccess: false, builddata:'' }, async  () => {\n   await fetch('http://localhost:8080/api/build', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         organizations :this.state.organizations,\n         channel :this.state.channel,\n    })\n  }).then( async function (response) {  \n        return await response.json();\n \n  }).then( function(json) {\n     alert(json.msg);\n     console.log(json.msg);\n     return  (json);\n     \n    // load: false,\n     //data: (json.msg),\n\n   // console.log(json);\n  }).then(json => this.setState({\n        loading: false,\n\tbuildsuccess: true,\n        builddata: json.msg,\n      }));\n  });\n\n  };\n\n  gotowrite = () => {\n  this.setState({ writeloading: true, writesuccess: false, writedata: '' }, () => {\n   fetch('http://localhost:8080/api/write', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         text :this.state.text,\n         channels :this.state.channels,\n         orgwrite: this.state.orgwrite, \n         peerwrite: this.state.peerwrite,\n         chnlwrite: this.state.chnlwrite,\n    })\n  })\n  .then(function (response) {  \n        return response.json();\n \n  })  \n  .then(function(json) {\n     //alert(json.msg);\n     return (json);\n     \n    // load: false,\n     //data: (json.msg),\n\n   // console.log(json);\n  })   .then(result  => this.setState({\n        writeloading: false,\n        writesuccess: true,\n        writedata: result.msg,\n      }));\n  });\n\n  };\n\n  gotoread = () => {\n     this.setState({ readloading: true }, () => {\n     fetch('http://localhost:8080/api/read', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         channels :this.state.channels,\n         orgwrite: this.state.orgwrite, \n         peerwrite: this.state.peerwrite,\n    })\n  })\n  .then(function (response) {  \n        return  response.json();\n  })  \n  .then(function(json) {\n       var i,line;\n       line='';\n\n       var myWindow = window.open('', '', \"width=500, height=300\");\n       for(i=0;i<json.msg.length;i++){\n          if(json.msg[i] != '\\n'){\n             line+=json.msg[i];\n          }\n          else{\n                          console.log(line);\n                   myWindow.document.write(\"<p>\" + line + \"</p>\");\n                   line='';\n          }\n        \n       }\n        //myWindow.blur();\n\n      // alert(json.msg);\n    //console.log(json);\n  })   .then(json => this.setState({\n        readloading: false,\n      }));\n  });\n\n  };\n\n\n  gotodown = () => {\n   fetch('http://localhost:8080/api/down', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         text :this.state.text,\n         channels :this.state.channels,\n    })\n  })\n  .then(function (response) {  \n        return response.json();\n \n  })  \n  .then(function(json) {\n    alert(json.msg);\n    console.log(json);\n  });\n\n  };\n\n  onChange1(value) {\n  console.log(`selected ${value}`)\n  };\n\n  onBlur() {\n  console.log('blur')\n  };\n\n  onFocus() {\n  console.log('focus')\n  };\n\n  onSearch(val) {\n  console.log('search:', val)\n  };\n   \n  \n  render() {\n    let Img = require('react-image');\n    const { writedata, loading,writeloading, readloading, writesuccess,buildsuccess ,builddata, orgState } = this.state;\n    const Option = Select;\n    const CheckboxGroup = Checkbox.Group;\n   const plainOptions = ['Apple', 'Pear', 'Orange'];\n   const checkedList = [];\n\n    return (\n        <div>\n        <div>\n          <Img src=\"https://www.cryptoninjas.net/wp-content/uploads/2017/12/blockchaincom.png\" width=\"600\" height=\"250\" />\n\n          <div>PRESS + TO ADD ORG</div>\n          <Button type=\"primary\" shape=\"circle\" icon=\"plus\" onClick={this.onAddOrganization} />\n          <div>Organizations</div>\n          {this.state.organizations.map(o => {\n            return <div key={o.id}>\n              <Input placeholder='Organization Name' value={o.name} onChange={(e) => this.onChangeorganizationName(e, o)}/>\n              <InputNumber value={o.peers} onChange={(e) => this.addPeers(e, o)} />\n\n            </div>\n          })}\n        <div>\n          <Button type=\"primary\" shape=\"circle\" icon=\"minus\" onClick={this.onRmovOrganization} />\n        </div>\n\n         <div>PRESS + TO ADD  new channels (by default you have the public channel with all the organizations)</div>\n          <Button type=\"primary\" shape=\"circle\" icon=\"plus\" onClick={this.onAddChannel} />\n          <div>Channel</div>\n          {this.state.channel.map(o => {\n            return <div key={o.id}>\n              <Input placeholder='channel Name' value={o.name} />\n       <CheckboxGroup\n          options={orgState}\n          value={o.list} onChange={(e) => this.oncannelChange(e, o) }\n        />\n            </div>\n          })}\n        <div>\n          <Button type=\"primary\" shape=\"circle\" icon=\"minus\" onClick={this.onRmovChannel} />\n        </div>\n\n        </div>\n     \n\n        <div>\n         <Button type=\"primary\" onClick={this.gotoaskserver} >Set configuration </Button>\n        </div>\n      \n        <div>\n         <Button type=\"primary\" onClick={this.gotobuild} >Set configuration and Build the nerwork</Button>\n        </div>\n         {loading ? <Spin />  : buildsuccess ? <Alert message={builddata} type=\"info\"  />   : <div></div> }\n\n          <Form.Item>\n          <div>write file line </div>\n\n          <Input placeholder='write file line'\n            value={this.state.text}\n            onChange={this.onTextChange}/>\n          <div>      peers organization         </div>\n\t <Select  onChange={this.onDropdownSelectedchnl}>\n\t       {this.createSelectItemschnl()}\n\t </Select>\n\t <Select  onChange={this.onDropdownSelected}>\n\t       {this.createSelectItems()}\n\t </Select>\n            {writeloading ? <Spin /> : writesuccess ? <Alert message={writedata} type=\"info\"  />   : <div></div> }\n         <Button type=\"primary\"  onClick={this.gotowrite} >submit write</Button>\n        </Form.Item>\n        <div>\n\n        </div>\n\n      <div> press here to read the chain   </div>\n          <div>      peers organization         </div>\n\t <Select  onChange={this.onDropdownSelected}>\n\t       {this.createSelectItems()}\n\t </Select>\n\t   {readloading ? <Spin /> : <div></div> }\n         <Button type=\"primary\" onClick={this.gotoread} >read chain</Button>\n       \n        <div>\n\n        </div>\n\n\n          <div>press here for down the network</div>\n      \n        <div>\n         <Button type=\"primary\" onClick={this.gotodown} >down the network</Button>\n        </div>\n            <Img src=\"https://www.hyperledger.org/wp-content/uploads/2018/10/Hyperledger-Fabric.png\" width=\"200\" height=\"90\" />\n            <Img src=\"https://bilberry.io/img/partners/nokiabelllabs.png\" width=\"350\" height=\"250\" />\n   </div>\n\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Chain />,\n  document.getElementById('root')\n);\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}