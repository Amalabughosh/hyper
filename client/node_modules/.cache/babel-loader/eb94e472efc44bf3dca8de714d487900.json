{"ast":null,"code":"var _jsxFileName = \"/home/amal/Desktop/project/blockchain_pro/fabric-samples/client/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form, Input, Button, InputNumber, Select, Spin, Icon, load, Alert, Checkbox } from 'antd';\nimport Popout from 'react-popout';\nimport NewWindow from 'react-new-window';\nimport FetchLoader from 'fetch-loader-react';\nimport LoadingSpinner from 'react-loader-spinner';\nimport BounceLoader from 'react-spinners/BounceLoader';\nimport Img from 'react-image';\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nclass Chain extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channel: [],\n      organizations: [],\n      opvalue: \"\",\n      text: \"\",\n      orgwrite: 0,\n      peerwrite: 0,\n      orgState: [],\n      loading: false,\n      data: \"\"\n    };\n\n    this.onChannelsChange = e => {\n      this.setState({\n        channels: e.target.value\n      });\n    };\n\n    this.onTextChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.onAddOrganization = () => {\n      const arr = [...this.state.organizations];\n      const oarr = [...this.state.orgState];\n      arr.push({\n        id: arr.length.toString(),\n        name: 'org' + (arr.length + 1),\n        peers: 0\n      });\n      oarr.push('org' + (oarr.length + 1));\n      this.setState({\n        organizations: arr\n      });\n      this.setState({\n        orgState: oarr\n      });\n    };\n\n    this.onAddChannel = () => {\n      const arr = [...this.state.channel];\n      arr.push({\n        id: arr.length.toString(),\n        name: 'channel' + (arr.length + 1),\n        list: []\n      });\n      this.setState({\n        channel: arr\n      });\n    };\n\n    this.onRmovOrganization = () => {\n      const arr = [...this.state.organizations];\n      arr.pop();\n      this.setState({\n        organizations: arr\n      });\n    };\n\n    this.onRmovChannel = () => {\n      const arr = [...this.state.channel];\n      arr.pop();\n      this.setState({\n        channel: arr\n      });\n    };\n\n    this.onDropdownSelected = value => {\n      console.log(\"selected \".concat(value));\n      var x = value % 10;\n      var y = value / 10;\n      this.setState({\n        orgwrite: y\n      });\n      this.setState({\n        peerwrite: x\n      });\n      console.log(\"x \".concat(x));\n      console.log(\"y \".concat(y)); //here you will see the current selected value of the select input\n    };\n\n    this.onChangeorganizationName = (e, o) => {\n      const arr = [...this.state.organizations];\n      console.log('name: ' + e.target.value);\n      console.log('id: ' + o.id); // +id\n\n      arr[o.id] = {\n        id: o.id,\n        name: e.target.value,\n        peers: o.peers\n      };\n      this.setState({\n        organizations: arr\n      }); // TODO: change the current array (organizations) with the new name\n    };\n\n    this.addPeers = (e, o) => {\n      const arr = [...this.state.organizations];\n      arr[o.id] = {\n        id: o.id,\n        name: o.name,\n        peers: e\n      };\n      this.setState({\n        organizations: arr\n      });\n    };\n\n    this.oncannelChange = (e, o) => {\n      const arr = [...this.state.channel];\n      arr[o.id] = {\n        id: o.id,\n        name: o.name,\n        list: e\n      };\n      console.log('id: ' + o.id); // +id\n\n      console.log('arr ' + e); // +id\n\n      this.setState({\n        channel: arr\n      });\n    };\n\n    this.addorgwrite = value => {\n      this.setState({\n        orgwrite: value\n      });\n      console.log('changed', value);\n    };\n\n    this.addpeerwrite = value => {\n      this.setState({\n        peerwrite: value\n      });\n      console.log('changed', value);\n    };\n\n    this.gotoaskserver = async () => {\n      await fetch('http://localhost:8080/api/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          organizations: this.state.organizations,\n          channel: this.state.channel\n        })\n      }).then(function (data) {\n        console.log('Request success: ', data);\n      }).catch(function (error) {\n        console.log('Request failure: ', error);\n      });\n    };\n\n    this.gotobuild = async () => {\n      this.setState({\n        loading: true,\n        buildsuccess: false,\n        builddata: ''\n      }, () => {\n        fetch('http://localhost:8080/api/build', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            organizations: this.state.organizations,\n            channel: this.state.channel\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          // alert(json.msg);\n          return json; // load: false,\n          //data: (json.msg),\n          // console.log(json);\n        }).then(json => this.setState({\n          loading: false,\n          buildsuccess: true,\n          builddata: json.msg\n        }));\n      });\n    };\n\n    this.gotowrite = () => {\n      this.setState({\n        writeloading: true,\n        writesuccess: false,\n        writedata: ''\n      }, () => {\n        fetch('http://localhost:8080/api/write', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: this.state.text,\n            channels: this.state.channels,\n            orgwrite: this.state.orgwrite,\n            peerwrite: this.state.peerwrite\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          //alert(json.msg);\n          return json; // load: false,\n          //data: (json.msg),\n          // console.log(json);\n        }).then(result => this.setState({\n          writeloading: false,\n          writesuccess: true,\n          writedata: result.msg\n        }));\n      });\n    };\n\n    this.gotoread = () => {\n      this.setState({\n        readloading: true\n      }, () => {\n        fetch('http://localhost:8080/api/read', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            channels: this.state.channels,\n            orgwrite: this.state.orgwrite,\n            peerwrite: this.state.peerwrite\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          var i, line;\n          line = '';\n          var myWindow = window.open('', '', \"width=500, height=300\");\n\n          for (i = 0; i < json.msg.length; i++) {\n            if (json.msg[i] != '\\n') {\n              line += json.msg[i];\n            } else {\n              console.log(line);\n              myWindow.document.write(\"<p>\" + line + \"</p>\");\n              line = '';\n            }\n          } //myWindow.blur();\n          // alert(json.msg);\n          //console.log(json);\n\n        }).then(json => this.setState({\n          readloading: false\n        }));\n      });\n    };\n\n    this.gotodown = () => {\n      fetch('http://localhost:8080/api/down', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: this.state.text,\n          channels: this.state.channels\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        alert(json.msg);\n        console.log(json);\n      });\n    };\n  }\n\n  createSelectItems() {\n    const Option = Select;\n    var arr = [...this.state.organizations];\n    var per = 0;\n    let items = [];\n    var k = 0;\n    var z;\n    console.log('length: ' + arr.length); // +id\n\n    for (var i = 0; i < arr.length; i++) {\n      if (arr.length > 0) {\n        console.log('arri: ' + arr[i].peers); // +id\n\n        for (var j = 0; j < arr[i].peers; j++) {\n          z = i + 1;\n          k = z * 10 + j;\n          console.log('k: ' + k); // +id\n\n          items.push(React.createElement(Select, {\n            key: k,\n            value: k,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, 'peer' + j + '.' + 'org' + z));\n        }\n      } //here I will be creating my options dynamically based on\n      //what props are currently passed to the parent component\n\n    }\n\n    return items;\n  }\n\n  onChange1(value) {\n    console.log(\"selected \".concat(value));\n  }\n\n  onBlur() {\n    console.log('blur');\n  }\n\n  onFocus() {\n    console.log('focus');\n  }\n\n  onSearch(val) {\n    console.log('search:', val);\n  }\n\n  render() {\n    let Img = require('react-image');\n\n    const _this$state = this.state,\n          writedata = _this$state.writedata,\n          loading = _this$state.loading,\n          writeloading = _this$state.writeloading,\n          readloading = _this$state.readloading,\n          writesuccess = _this$state.writesuccess,\n          buildsuccess = _this$state.buildsuccess,\n          builddata = _this$state.builddata,\n          orgState = _this$state.orgState;\n    const Option = Select;\n    const CheckboxGroup = Checkbox.Group;\n    const plainOptions = ['Apple', 'Pear', 'Orange'];\n    const checkedList = [];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Img, {\n      src: \"https://www.cryptoninjas.net/wp-content/uploads/2017/12/blockchaincom.png\",\n      width: \"600\",\n      height: \"250\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"PRESS + TO ADD ORG\"), React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"plus\",\n      onClick: this.onAddOrganization,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Organizations\"), this.state.organizations.map(o => {\n      return React.createElement(\"div\", {\n        key: o.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Organization Name\",\n        value: o.name,\n        onChange: e => this.onChangeorganizationName(e, o),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), React.createElement(InputNumber, {\n        value: o.peers,\n        onChange: e => this.addPeers(e, o),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }));\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"minus\",\n      onClick: this.onRmovOrganization,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"PRESS + TO ADD  new channels (by default you have the public channel with all the organizations)\"), React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"plus\",\n      onClick: this.onAddChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Channel\"), this.state.channel.map(o => {\n      return React.createElement(\"div\", {\n        key: o.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"channel Name\",\n        value: o.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), React.createElement(CheckboxGroup, {\n        options: orgState,\n        value: o.list,\n        onChange: e => this.oncannelChange(e, o),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }));\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: \"minus\",\n      onClick: this.onRmovChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotoaskserver,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"Set configuration \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotobuild,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"Set configuration and Build the nerwork\")), loading ? React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }) : buildsuccess ? React.createElement(Alert, {\n      message: builddata,\n      type: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"write file line \"), React.createElement(Input, {\n      placeholder: \"write file line\",\n      value: this.state.text,\n      onChange: this.onTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"      peers organization         \"), React.createElement(Select, {\n      onChange: this.onDropdownSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, this.createSelectItems()), writeloading ? React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }) : writesuccess ? React.createElement(Alert, {\n      message: writedata,\n      type: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotowrite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"submit write\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \" press here to read the chain   \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"      peers organization         \"), React.createElement(Select, {\n      onChange: this.onDropdownSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, this.createSelectItems()), readloading ? React.createElement(Spin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotoread,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"read chain\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"press here for down the network\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.gotodown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"down the network\")), React.createElement(Img, {\n      src: \"https://www.hyperledger.org/wp-content/uploads/2018/10/Hyperledger-Fabric.png\",\n      width: \"200\",\n      height: \"90\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }), \"//\", React.createElement(Img, {\n      src: \"https://bilberry.io/img/partners/nokiabelllabs.png\",\n      width: \"350\",\n      height: \"250\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Chain, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 398\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/amal/Desktop/project/blockchain_pro/fabric-samples/client/src/index.js"],"names":["React","Component","ReactDOM","Form","Input","Button","InputNumber","Select","Spin","Icon","load","Alert","Checkbox","Popout","NewWindow","FetchLoader","LoadingSpinner","BounceLoader","Img","Chain","state","channel","organizations","opvalue","text","orgwrite","peerwrite","orgState","loading","data","onChannelsChange","e","setState","channels","target","value","onTextChange","onAddOrganization","arr","oarr","push","id","length","toString","name","peers","onAddChannel","list","onRmovOrganization","pop","onRmovChannel","onDropdownSelected","console","log","x","y","onChangeorganizationName","o","addPeers","oncannelChange","addorgwrite","addpeerwrite","gotoaskserver","fetch","method","headers","body","JSON","stringify","then","catch","error","gotobuild","buildsuccess","builddata","response","json","msg","gotowrite","writeloading","writesuccess","writedata","result","gotoread","readloading","i","line","myWindow","window","open","document","write","gotodown","alert","createSelectItems","Option","per","items","k","z","j","onChange1","onBlur","onFocus","onSearch","val","render","require","CheckboxGroup","Group","plainOptions","checkedList","map","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form, Input, Button, InputNumber, Select, Spin, Icon, load,  Alert, Checkbox  } from 'antd';\nimport Popout from 'react-popout'\nimport NewWindow from 'react-new-window'\nimport FetchLoader from 'fetch-loader-react';\nimport LoadingSpinner from 'react-loader-spinner'\nimport BounceLoader from 'react-spinners/BounceLoader'\nimport Img from 'react-image'\n\n\n\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nclass Chain extends React.Component {\n  \n  // state = { channels: \"A, B, C\", organizations: [{name: \"x\", peers: 100}, {name: \"y\", peers: 200}] };\n   state = { channel: [], organizations: [], opvalue: \"\", text: \"\", orgwrite: 0, peerwrite: 0, orgState: [],  loading: false, data:\"\"};\n\n  onChannelsChange = e => {\n    this.setState({channels: e.target.value});\n  };\n  onTextChange = e => {\n    this.setState({text: e.target.value});\n  };\n\n  onAddOrganization = () => {\n    const arr = [...this.state.organizations];\n    const oarr = [...this.state.orgState];\n    arr.push({id: arr.length.toString(), name: 'org'+(arr.length+1), peers: 0});\n    oarr.push('org'+(oarr.length+1));\n    this.setState({organizations: arr});\n    this.setState({orgState: oarr});\n  };\n\n  onAddChannel = () => {\n    const arr = [...this.state.channel];\n    arr.push({id: arr.length.toString(), name: 'channel'+(arr.length+1), list: []});\n    this.setState({channel: arr});\n    \n  };\n\n  onRmovOrganization = () => {\n    const arr = [...this.state.organizations];\n    arr.pop();\n    this.setState({organizations: arr});\n  };\n\n  onRmovChannel = () => {\n    const arr = [...this.state.channel];\n    arr.pop();\n    this.setState({channel: arr});\n  };\n\n  createSelectItems() {\n     const Option = Select;\n     var arr = [...this.state.organizations];\n     var per=0;\n     let items = []; \n     var k=0;\n     var z;\n     console.log('length: ' +arr.length); // +id\n     for (var i = 0; i < arr.length; i++) {\n          if(arr.length>0){\n          console.log('arri: ' + arr[i].peers); // +id\n          for (var j=0;j<arr[i].peers; j++){\n                z= i+1;       \n                k= z*10+j; \n                console.log('k: ' + k); // +id\n                items.push(<Select  key={k} value={k}>{'peer'+j+'.'+'org'+z}</Select >); \n         }  \n\t}\n          //here I will be creating my options dynamically based on\n          //what props are currently passed to the parent component\n     }\n     return items;\n  };  \n\n  onDropdownSelected = value => {\n     console.log(`selected ${value}`);\n     var x = value%10;\n     var y = value/10;\n     this.setState({orgwrite: y});\n     this.setState({peerwrite: x});\n     console.log(`x ${x}`);\n     console.log(`y ${y}`);\n    //here you will see the current selected value of the select input\n  };\n\n  onChangeorganizationName = (e, o) => {\n    const arr = [...this.state.organizations];\n    console.log('name: ' + e.target.value);\n    console.log('id: ' + o.id); // +id\n    arr[o.id]={id: o.id, name:e.target.value, peers: o.peers}\n    this.setState({organizations: arr});\n\n    // TODO: change the current array (organizations) with the new name\n  };\n\n  addPeers = (e, o) => {\n    const arr = [...this.state.organizations];\n    arr[o.id]={id: o.id, name:o.name, peers: e}\n    this.setState({organizations: arr});\n  };\n\n\n  oncannelChange = (e, o) => {\n    const arr = [...this.state.channel];\n    arr[o.id]={id: o.id, name:o.name, list: e}\n    console.log('id: ' + o.id); // +id\n    console.log('arr ' + e); // +id\n    this.setState({channel : arr});\n  };\n\n\n addorgwrite = value => {\n  this.setState({orgwrite: value});\n  console.log('changed', value);\n  };\n addpeerwrite = value => {\n  this.setState({peerwrite: value});\n  console.log('changed', value);\n  };\n\n  gotoaskserver = async () => {\n   await fetch('http://localhost:8080/api/create', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         organizations :this.state.organizations,\n         channel :this.state.channel,\n    })\n  })\n  .then(function (data) {  \n    console.log('Request success: ', data);  \n  })  \n  .catch(function (error) {  \n    console.log('Request failure: ', error);  \n  });\n\n  };\n\n  gotobuild =   async () => {\n   this.setState({ loading: true, buildsuccess: false, builddata:'' }, () => {\n    fetch('http://localhost:8080/api/build', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         organizations :this.state.organizations,\n         channel :this.state.channel,\n    })\n  })\n  .then(function (response) {  \n        return response.json();\n \n  })  \n  .then(function(json) {\n    // alert(json.msg);\n     return (json);\n     \n    // load: false,\n     //data: (json.msg),\n\n   // console.log(json);\n  })   .then(json => this.setState({\n        loading: false,\n\tbuildsuccess: true,\n        builddata: json.msg,\n      }));\n  });\n\n  };\n\n  gotowrite = () => {\n  this.setState({ writeloading: true, writesuccess: false, writedata: '' }, () => {\n   fetch('http://localhost:8080/api/write', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         text :this.state.text,\n         channels :this.state.channels,\n         orgwrite: this.state.orgwrite, \n         peerwrite: this.state.peerwrite,\n    })\n  })\n  .then(function (response) {  \n        return response.json();\n \n  })  \n  .then(function(json) {\n     //alert(json.msg);\n     return (json);\n     \n    // load: false,\n     //data: (json.msg),\n\n   // console.log(json);\n  })   .then(result  => this.setState({\n        writeloading: false,\n        writesuccess: true,\n        writedata: result.msg,\n      }));\n  });\n\n  };\n\n  gotoread = () => {\n     this.setState({ readloading: true }, () => {\n     fetch('http://localhost:8080/api/read', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         channels :this.state.channels,\n         orgwrite: this.state.orgwrite, \n         peerwrite: this.state.peerwrite,\n    })\n  })\n  .then(function (response) {  \n        return  response.json();\n  })  \n  .then(function(json) {\n       var i,line;\n       line='';\n\n       var myWindow = window.open('', '', \"width=500, height=300\");\n       for(i=0;i<json.msg.length;i++){\n          if(json.msg[i] != '\\n'){\n             line+=json.msg[i];\n          }\n          else{\n                          console.log(line);\n                   myWindow.document.write(\"<p>\" + line + \"</p>\");\n                   line='';\n          }\n        \n       }\n        //myWindow.blur();\n\n      // alert(json.msg);\n    //console.log(json);\n  })   .then(json => this.setState({\n        readloading: false,\n      }));\n  });\n\n  };\n\n\n  gotodown = () => {\n   fetch('http://localhost:8080/api/down', {  \n      method: 'POST',  \n      headers: {\n        'Content-Type': 'application/json',\n       },        \n        body: JSON.stringify({\n         text :this.state.text,\n         channels :this.state.channels,\n    })\n  })\n  .then(function (response) {  \n        return response.json();\n \n  })  \n  .then(function(json) {\n    alert(json.msg);\n    console.log(json);\n  });\n\n  };\n\n  onChange1(value) {\n  console.log(`selected ${value}`)\n  };\n\n  onBlur() {\n  console.log('blur')\n  };\n\n  onFocus() {\n  console.log('focus')\n  };\n\n  onSearch(val) {\n  console.log('search:', val)\n  };\n   \n  \n  render() {\n    let Img = require('react-image');\n    const { writedata, loading,writeloading, readloading, writesuccess,buildsuccess ,builddata, orgState } = this.state;\n    const Option = Select;\n    const CheckboxGroup = Checkbox.Group;\n   const plainOptions = ['Apple', 'Pear', 'Orange'];\n   const checkedList = [];\n\n    return (\n        <div>\n        <div>\n          <Img src=\"https://www.cryptoninjas.net/wp-content/uploads/2017/12/blockchaincom.png\" width=\"600\" height=\"250\" />\n\n          <div>PRESS + TO ADD ORG</div>\n          <Button type=\"primary\" shape=\"circle\" icon=\"plus\" onClick={this.onAddOrganization} />\n          <div>Organizations</div>\n          {this.state.organizations.map(o => {\n            return <div key={o.id}>\n              <Input placeholder='Organization Name' value={o.name} onChange={(e) => this.onChangeorganizationName(e, o)}/>\n              <InputNumber value={o.peers} onChange={(e) => this.addPeers(e, o)} />\n\n            </div>\n          })}\n        <div>\n          <Button type=\"primary\" shape=\"circle\" icon=\"minus\" onClick={this.onRmovOrganization} />\n        </div>\n\n         <div>PRESS + TO ADD  new channels (by default you have the public channel with all the organizations)</div>\n          <Button type=\"primary\" shape=\"circle\" icon=\"plus\" onClick={this.onAddChannel} />\n          <div>Channel</div>\n          {this.state.channel.map(o => {\n            return <div key={o.id}>\n              <Input placeholder='channel Name' value={o.name} />\n       <CheckboxGroup\n          options={orgState}\n          value={o.list} onChange={(e) => this.oncannelChange(e, o) }\n        />\n            </div>\n          })}\n        <div>\n          <Button type=\"primary\" shape=\"circle\" icon=\"minus\" onClick={this.onRmovChannel} />\n        </div>\n\n        </div>\n     \n\n        <div>\n         <Button type=\"primary\" onClick={this.gotoaskserver} >Set configuration </Button>\n        </div>\n      \n        <div>\n         <Button type=\"primary\" onClick={this.gotobuild} >Set configuration and Build the nerwork</Button>\n        </div>\n         {loading ? <Spin />  : buildsuccess ? <Alert message={builddata} type=\"info\"  />   : <div></div> }\n\n          <Form.Item>\n          <div>write file line </div>\n\n          <Input placeholder='write file line'\n            value={this.state.text}\n            onChange={this.onTextChange}/>\n          <div>      peers organization         </div>\n\t <Select  onChange={this.onDropdownSelected}>\n\t       {this.createSelectItems()}\n\t </Select>\n            {writeloading ? <Spin /> : writesuccess ? <Alert message={writedata} type=\"info\"  />   : <div></div> }\n         <Button type=\"primary\"  onClick={this.gotowrite} >submit write</Button>\n        </Form.Item>\n        <div>\n\n        </div>\n\n      <div> press here to read the chain   </div>\n          <div>      peers organization         </div>\n\t <Select  onChange={this.onDropdownSelected}>\n\t       {this.createSelectItems()}\n\t </Select>\n\t   {readloading ? <Spin /> : <div></div> }\n         <Button type=\"primary\" onClick={this.gotoread} >read chain</Button>\n       \n        <div>\n\n        </div>\n\n\n          <div>press here for down the network</div>\n      \n        <div>\n         <Button type=\"primary\" onClick={this.gotodown} >down the network</Button>\n        </div>\n            <Img src=\"https://www.hyperledger.org/wp-content/uploads/2018/10/Hyperledger-Fabric.png\" width=\"200\" height=\"90\" />\n            //<Img src=\"https://bilberry.io/img/partners/nokiabelllabs.png\" width=\"350\" height=\"250\" />\n   </div>\n\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Chain />,\n  document.getElementById('root')\n);\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}